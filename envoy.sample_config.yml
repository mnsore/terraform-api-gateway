static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          access_log:
            - name: envoy.access_loggers.stdout
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          route_config:
            name: local_route
            virtual_hosts:
            - name: upstream
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/headers"
                route:
                  cluster: upstream-service
              - match:
                  prefix: "/store/fhir"
                request_headers_to_add:
                - header:
                   key: "api-version"
                   value: "1"
                - header:
                   key: "Accept"
                   value: "application/json"
                route:
                  cluster: cdr-service
                  host_rewrite_literal: cdr-edisa-test.us-east.philips-healthsuite.com
              - match:
                  prefix: "/mockserviceA"
                route:
                  cluster: mockserviceA
              - match:
                  prefix: "/mockserviceB"
                route:
                  cluster: mockserviceB   
              - match:
                  prefix: "/oauth2/callback"
                route:
                  cluster: oauth-proxy-service
              - match:
                  prefix: "/"
                route:
                  cluster: mountebank                                   
          http_filters:
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              inline_code: |
                function envoy_on_request(request_handle)
                  local url=request_handle:headers():get(":scheme").."://"..request_handle:headers():get(":authority")..request_handle:headers():get(":path")
                  request_handle:headers():add("X-Auth-Request-Redirect",url)
                end
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              transport_api_version: V3
              http_service:
                server_uri:
                  uri: ${OAUTH_PROXY_ENDPOINT}:${OAUTH_PROXY_PORT}
                  cluster: oauth-proxy-service
                  timeout:  0.250s
                authorization_request:
                 allowed_headers:
                    patterns:
                     - exact: cookie
                     - prefix: X-Auth-Request-Redirect
                authorization_response:
                  allowed_client_headers_on_success:
                    patterns:
                     - exact: set-cookie
                  allowed_upstream_headers:
                    patterns:
                     - exact: set-cookie
                     - prefix: x-auth-request
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              inline_code: |
                function envoy_on_request(request_handle)
                   local access_token=request_handle:headers():get("x-auth-request-access-token")
                  request_handle:headers():add("Authorization","Bearer "..access_token)
                end
          - name: envoy.filters.http.router
            typed_config: {}
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8443
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          access_log:
            - name: envoy.access_loggers.stdout
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          route_config:
            name: local_route
            virtual_hosts:
            - name: upstream
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: upstream-service
          http_filters:
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              inline_code: |
                function envoy_on_request(request_handle)
                  local url=request_handle:headers():get(":scheme").."://"..request_handle:headers():get(":authority")..request_handle:headers():get(":path")
                  request_handle:headers():add("X-Auth-Request-Redirect",url)
                end
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              transport_api_version: V3
              http_service:
                server_uri:
                  uri: ${OAUTH_PROXY_ENDPOINT}:${OAUTH_PROXY_PORT}
                  cluster: oauth-proxy-service
                  timeout:  0.250s
                authorization_request:
                  allowed_headers:
                    patterns:
                     - exact: cookie
                     - prefix: x-
                authorization_response:
                  allowed_upstream_headers:
                    patterns:
                     - prefix: x-
          - name: envoy.filters.http.router
            typed_config: {}
  clusters:
  - name: upstream-service
    connect_timeout: 0.250s
    type: logical_dns
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: upstream-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: upstream1-covid-dev.apps.internal
                port_value: 8080
  - name: mountebank
    connect_timeout: 0.250s
    type: logical_dns
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: mountebank
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: montebanktest-covid-dev.apps.internal
                port_value: 2525
  - name: mockserviceA
    connect_timeout: 0.250s
    type: logical_dns
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: mockserviceA
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: montebanktest-covid-dev.apps.internal
                port_value: 4545
  - name: mockserviceB
    connect_timeout: 0.250s
    type: logical_dns
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: mockserviceB
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: montebanktest-covid-dev.apps.internal
                port_value: 4546                                                         
  - name: oauth-proxy-service
    connect_timeout: 0.250s
    type: logical_dns
    load_assignment:
      cluster_name: oauth-proxy-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: ${OAUTH_PROXY_ENDPOINT}
                port_value: ${OAUTH_PROXY_PORT}
  - name: cdr-service
    connect_timeout: 0.250s
    type: logical_dns
    load_assignment:
      cluster_name: cdr-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: cdr-edisa-test.us-east.philips-healthsuite.com
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: /etc/ssl/certs/ca-certificates.crt
            match_subject_alt_names:
            - exact: cdr-edisa-test.us-east.philips-healthsuite.com

